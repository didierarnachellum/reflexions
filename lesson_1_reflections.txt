How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Lines are limited to the ones that have been actually updated

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can get back to any version and check the differences

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Control size of commit
    Control number of commits
    Each commit has a meaning
    Code is compilable

    Cons: You can forget to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is code oriented, and coding invlolves updates in many files at the time

How can you use the commands git log and git diff to view the history of files?

    Git log to see all the commits and comments
    Git diff to check what have changed between two commits

How might using version control make you more confident to make changes that
could break something?

    I know that I can always revert to the latest running version

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here